package trud.io.kjar;
import com.sbnz.trud.io.model.OgttTest;
import com.sbnz.trud.io.model.Birth;
import com.sbnz.trud.io.model.Patient;
import java.time.LocalDateTime;
import java.time.LocalDate;
import java.lang.Math;
import java.time.temporal.ChronoUnit;
import java.util.List;
import java.time.Period;
import java.util.Collections;
import java.util.ArrayList;
import java.time.*;  

rule "Primary sampling > 199"
	agenda-group "ogtt"
	when
		$ogtt: OgttTest( result == "SUBMITED", primarySampling > 199 )
	then
		modify($ogtt) {
			setResult("POSITIVE");
		} 
end

rule "Primary sampling < 140"
	agenda-group "ogtt"
	when 
		$ogtt: OgttTest( result == "SUBMITED", primarySampling < 140 )
	then
		modify($ogtt) {
			setResult("NEGATIVE");
		}
end

rule "Primary sampling > 140 and < 199"
	agenda-group "ogtt"
	when 
	 	$ogtt: OgttTest( result == "SUBMITED", primarySampling > 140 && primarySampling < 199 )
	 then
	 	modify($ogtt) {
	 		setResult("EXTENDED_OGTT");
	 	}
end

rule "Extended ogtt first sample > 95"
	agenda-group "ogtt"
	when
		$ogtt: OgttTest( result == "EXTENDED_OGTT", firstBloodSampling > 95 )
	then
		modify($ogtt) {
			setResult("POSITIVE");
		}
end

rule "Extended ogtt 2 3 have bigger values"
	agenda-group "ogtt"
	when
		$ogtt: OgttTest( result == "EXTENDED_OGTT", secondBloodSampling > 180 && thirdBloodSampling > 155)
	then 
		modify($ogtt) {
			setResult("POSITIVE");
		}
end

rule "Extended ogtt 2. and 4. have bigger values"
	agenda-group "ogtt"
	when
		$ogtt: OgttTest( result == "EXTENDED_OGTT", secondBloodSampling > 180 && fourthBloodSampling > 140)
	then 
		modify($ogtt) {
			setResult("POSITIVE");
		}
end

rule "Extended ogtt 3. and 4. have bigger values"
	agenda-group "ogtt"
	when
		$ogtt: OgttTest( result == "EXTENDED_OGTT", thirdBloodSampling > 155 && fourthBloodSampling > 140)
	then 
		modify($ogtt) {
			setResult("POSITIVE");
		}
end


rule "Ogtt in 12 week of pregnancy - births"
	agenda-group "ogttTest"
	when
		$pregnancy: Pregnancy(Math.floor(Math.abs(Duration.between(LocalDate.now().atStartOfDay(), startDate.atStartOfDay()).toDays())/7) == 12)
		$ogtt: List(size == 0) from accumulate(OgttTest(result == "NOT-PROCESSED") from $pregnancy.ogttTests; collectList())
		$pregnancies: Pregnancy($pregnancy.patient.id == patient.id, birth != null)
		$births: List(size > 0) from accumulate(Pregnancy(birth.weight > 4, $birth: birth) from $pregnancies;
									collectList($birth))
	then
		OgttTest test = new OgttTest("NOT-PROCESSED");
		modify($pregnancy) {
			getOgttTests().add(test);
		}
end

rule "Ogtt in 12 week of pregnancy - obesity"
	agenda-group "ogttTest"
	when
		$pregnancy: Pregnancy(Math.floor(Math.abs(Duration.between(LocalDate.now().atStartOfDay(), startDate.atStartOfDay()).toDays())/7) == 12,
								patient.weight/((patient.height/100)*(patient.height/100)) > 29.9)
		$ogtt: List(size == 0) from accumulate(OgttTest(result == "NOT-PROCESSED") from $pregnancy.ogttTests; collectList())
	then
		OgttTest test = new OgttTest("NOT-PROCESSED");
		modify($pregnancy) {
			getOgttTests().add(test);
		}
end

rule "Ogtt in 12 week of pregnancy - age > 35"
	agenda-group "ogttTest"
	when
		$pregnancy: Pregnancy(Math.floor(Math.abs(Duration.between(LocalDate.now().atStartOfDay(), startDate.atStartOfDay()).toDays())/7) == 12,
								(LocalDateTime.now().getYear() - patient.dateOfBirth.getYear()) > 35)
		$ogtt: List(size == 0) from accumulate(OgttTest(result == "NOT-PROCESSED") from $pregnancy.ogttTests; collectList())
	then
		OgttTest test = new OgttTest("NOT-PROCESSED");
		modify($pregnancy) {
			getOgttTests().add(test);
		}
end

