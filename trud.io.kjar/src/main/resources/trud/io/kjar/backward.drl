package trud.io.kjar;
import com.sbnz.trud.io.model.*;
import java.time.LocalDateTime;
import java.time.LocalDate;
import java.lang.Math;
import java.time.temporal.ChronoUnit;
import java.util.List;
import java.time.Period;
import java.util.Collections;
import java.util.ArrayList;
import java.time.*;  

global Pregnancy pregnancy;

declare ThereIsIllness
	name: String
end

rule "First group of symptoms for preeclampsia"
	salience 100
	agenda-group "backward"
	when
		// ukoliko vec postoji nece se okidati opet
		$illnesses: List(size == 0) from collect(Illness(name == 'Preeklampsija') from pregnancy.illnesses)
		$symptoms: List(size >= 2) from collect(Symptom(this == Symptom.SEVERE_HEADACHES || this == Symptom.WEIGHT_GAIN ||
												this == Symptom.SWELLING || this == Symptom.NAUSEA) from pregnancy.symptoms)
	then 
		System.out.println("OVDEE");
		insert(new Fact("Prva grupa simptoma", pregnancy.getId().toString()));
end

rule "First group of symptoms for eclampsia"
	salience 100
	agenda-group "backward"
	when
		// ukoliko vec postoji nece se okidati opet
		$illnesses: List(size == 0) from collect(Illness(name == 'Eklampsija') from pregnancy.illnesses)
		$symptoms: List(size >= 2) from collect(Symptom(this == Symptom.SEVERE_HEADACHES || this == Symptom.WEIGHT_GAIN ||
												this == Symptom.SWELLING || this == Symptom.NAUSEA) from pregnancy.symptoms)
	then 
		System.out.println("OVDEE1");
		insert(new Fact("Prva grupa simptoma", pregnancy.getId().toString()));
end

rule "First group of symptoms for kidney disease"
	salience 100
	agenda-group "backward"
	when
		// ukoliko vec postoji nece se okidati opet
		$illnesses: List(size == 0) from collect(Illness(name == 'Bolest bubrega') from pregnancy.illnesses)
		$symptoms: List(size >= 2) from collect(Symptom(this == Symptom.SEVERE_HEADACHES || this == Symptom.WEIGHT_GAIN ||
												this == Symptom.SWELLING || this == Symptom.NAUSEA) from pregnancy.symptoms)
	then 
		System.out.println("OVDEE2");
		insert(new Fact("Prva grupa simptoma", pregnancy.getId().toString()));
end


rule "Second group of symptoms"
	salience 90
	agenda-group "backward"
	when
		$symptoms: List(size >= 1) from collect(Symptom(this == Symptom.LOW_THROMBOCYES_COUNT || this == Symptom.HIGH_BLOOD_PRESSURE ||
												this == Symptom.HIGH_PROTEIN_LEVELS) from pregnancy.symptoms)
	then 
		System.out.println("OVDEE3");
		insert(new Fact("Druga grupa simptoma", "Prva grupa simptoma"));
end

rule "Third group of symptoms"
	salience 80
	agenda-group "backward"
	when
		$symptoms: List(size >= 1) from collect(Symptom(this == Symptom.SEIZURES || this == Symptom.LOSS_OF_CONSCIOUSNESS) from pregnancy.symptoms)
	then 
		System.out.println("OVDEE4");
		insert(new Fact("Treca grupa simptoma", "Druga grupa simptoma"));
end

rule "Week of pregnancy < 20"
	salience 80
	agenda-group "backward"
	when
		eval(Math.abs(Duration.between(LocalDate.now().atStartOfDay(), pregnancy.getStartDate().atStartOfDay()).toDays()) < 20*7)
	then 
		System.out.println("OVDEE5");
		insert(new Fact("Broj nedelje < 20", "Druga grupa simptoma"));
end

rule "Week of pregnancy > 20"
	salience 80
	agenda-group "backward"
	when
		eval(Math.abs(Duration.between(LocalDate.now().atStartOfDay(), pregnancy.getStartDate().atStartOfDay()).toDays()) > 20*7)
	then 
		System.out.println("OVDEE6");
		insert(new Fact("Broj nedelje > 20", "Druga grupa simptoma"));
end

query isThereSymptom(String x, String y )
  Fact( x, y; )
  or
  ( Fact( z, y; ) and isThereSymptom(  x, z; ) )
end


rule "Is there preeclampsia"
	salience 70
	agenda-group "backward"
	when
		not ThereIsIllness(name == 'Preeklampsija')
	    isThereSymptom("Preeklampsija", pregnancy.getId().toString();)
	then
		insert(new ThereIsIllness('Preeklampsija'));
	    Illness illness = new Illness("Preeklampsija");
	    pregnancy.getIllnesses().add(illness);
end

rule "Is there eclampsia"
	salience 70
	agenda-group "backward"
	when
		not ThereIsIllness(name == 'Eklampsija')
	    isThereSymptom("Eklampsija", pregnancy.getId().toString();)
	then
		insert(new ThereIsIllness('Eklampsija'));
	    Illness illness = new Illness("Eklampsija");
	    pregnancy.getIllnesses().add(illness);
end

rule "Is there kidney disease"
	salience 70
	agenda-group "backward"
	when
		not ThereIsIllness(name == 'Bolest bubrega')
	    isThereSymptom("Bolest bubrega", pregnancy.getId().toString();)
	then
		insert(new ThereIsIllness('Bolest bubrega'));
	    Illness illness = new Illness("Bolest bubrega");
		pregnancy.getIllnesses().add(illness);
end